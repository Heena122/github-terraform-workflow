name: Terraform Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
    TF_VAR_bucket_name: heena123987
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  terraform:
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
       


# name: Terraform AWS

# on:
#    workflow_dispatch:
#     branches:
#       - main

# jobs:
#   terraform_init:
#     runs-on: ubuntu-latest
#     # runs-on: self-hosted
#     # container: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.1.0

#       - name: Terraform Init
#         run: terraform init
      

#       - name: Terraform Plan
#         run: terraform plan

#       - name: Terraform Apply
#         run: terraform apply
      
#       env:
#           TF_VAR_bucket_name: your_bucket_name_here
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # terraform_plan:
  #   runs-on: self-hosted
  #   # container: ubuntu-latest
  #   needs: terraform_init

  #   steps:
  #     - name: Checkout repository 
  #       uses: actions/checkout@v2

  #     - name: Terraform Plan
  #       run: terraform plan -input=false -out=tfplan
  #       # env:
  #       #   TF_VAR_bucket_name: your_bucket_name_here
  #       #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # terraform_apply:
  #   runs-on: ubuntu-latest
  #   # container: ubuntu-latest
  #   # needs: terraform_plan

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve tfplan
        # env:
        #   TF_VAR_bucket_name: your_bucket_name_here
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # cleanup:
  #   runs-on: self-hosted
  #   container: ubuntu-latest
  #   if: always()

  #   steps:
  #     - name: Clean up Terraform
  #       run: terraform destroy -auto-approve
        # env:
        #   TF_VAR_bucket_name: your_bucket_name_here
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

















# name: Terraform

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     name: Terraform
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.0.0

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Plan
#         run: terraform plan

#       - name: Terraform Apply
#         run: terraform apply -auto-approve
#         env:
#           TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
